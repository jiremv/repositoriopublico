{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/item.service\";\nfunction EditItemComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 2)(2, \"label\", 3);\n    i0.ɵɵtext(3, \"Nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function EditItemComponent_div_2_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.item.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 2)(6, \"label\", 5);\n    i0.ɵɵtext(7, \"Descripci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function EditItemComponent_div_2_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.item.description = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function EditItemComponent_div_2_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateItem());\n    });\n    i0.ɵɵtext(10, \"Actualizar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.item.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.item.description);\n  }\n}\nfunction EditItemComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h4\");\n    i0.ɵɵtext(2, \"El item se actualiz\\u00F3 satisfactoriamente!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function EditItemComponent_div_3_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.editAnotherItem());\n    });\n    i0.ɵɵtext(4, \"Editar otro registro\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class EditItemComponent {\n  constructor(itemService) {\n    this.itemService = itemService;\n    this.item = {\n      name: '',\n      description: ''\n    };\n    this.submitted = false;\n  }\n  updateItem() {\n    const data = {\n      name: this.item.name,\n      description: this.item.description\n    };\n    // Assuming you have an \"id\" property for the item you want to update\n    const itemId = this.item.id;\n    this.itemService.update(itemId, data).subscribe({\n      next: res => {\n        console.log(res);\n        this.submitted = true;\n      },\n      error: e => console.error(e)\n    });\n  }\n  editAnotherItem() {\n    this.submitted = false;\n    this.item = {\n      name: '',\n      description: ''\n    };\n  }\n}\nEditItemComponent.ɵfac = function EditItemComponent_Factory(t) {\n  return new (t || EditItemComponent)(i0.ɵɵdirectiveInject(i1.ItemService));\n};\nEditItemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditItemComponent,\n  selectors: [[\"app-edit-item\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[1, \"submit-form\"], [4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"required\", \"\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"id\", \"description\", \"required\", \"\", \"name\", \"description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function EditItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0);\n      i0.ɵɵtemplate(2, EditItemComponent_div_2_Template, 11, 2, \"div\", 1);\n      i0.ɵɵtemplate(3, EditItemComponent_div_3_Template, 5, 0, \"div\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.submitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted);\n    }\n  },\n  styles: [\".submit-form[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  margin: auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9lZGl0LWl0ZW0vZWRpdC1pdGVtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsWUFBWTtBQUNkIiwic291cmNlc0NvbnRlbnQiOlsiLnN1Ym1pdC1mb3JtIHtcbiAgbWF4LXdpZHRoOiA0MDBweDtcbiAgbWFyZ2luOiBhdXRvO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;IAEIA,2BAAwB;IAEFA,sBAAM;IAAAA,iBAAQ;IAChCA,gCAOE;IAFAA;MAAAA;MAAA;MAAA,OAAaA,yCACjB;IAAA,EAD2B;IALzBA,iBAOE;IAGJA,8BAAwB;IACGA,gCAAW;IAAAA,iBAAQ;IAC5CA,gCAME;IAFAA;MAAAA;MAAA;MAAA,OAAaA,gDACjB;IAAA,EADkC;IAJhCA,iBAME;IAGJA,iCAAuD;IAA/CA;MAAAA;MAAA;MAAA,OAASA,kCAAY;IAAA,EAAC;IAAyBA,2BAAU;IAAAA,iBAAS;;;;IAhBtEA,eAAuB;IAAvBA,0CAAuB;IAWvBA,eAA8B;IAA9BA,iDAA8B;;;;;;IAQpCA,2BAAuB;IACjBA,6DAAwC;IAAAA,iBAAK;IACjDA,iCAA4D;IAA5BA;MAAAA;MAAA;MAAA,OAASA,uCAAiB;IAAA,EAAC;IAACA,oCAAoB;IAAAA,iBAAS;;;ACtB/F,OAAM,MAAOC,iBAAiB;EAQ5BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAN/B,SAAI,GAAS;MACXC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE;KACd;IACD,cAAS,GAAG,KAAK;EAE+B;EAEhDC,UAAU;IACR,MAAMC,IAAI,GAAG;MACXH,IAAI,EAAE,IAAI,CAACI,IAAI,CAACJ,IAAI;MACpBC,WAAW,EAAE,IAAI,CAACG,IAAI,CAACH;KACxB;IAED;IACA,MAAMI,MAAM,GAAG,IAAI,CAACD,IAAI,CAACE,EAAE;IAE3B,IAAI,CAACP,WAAW,CAACQ,MAAM,CAACF,MAAM,EAAEF,IAAI,CAAC,CAClCK,SAAS,CAAC;MACTC,IAAI,EAAGC,GAAG,IAAI;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAI,CAACG,SAAS,GAAG,IAAI;MACvB,CAAC;MACDC,KAAK,EAAGC,CAAC,IAAKJ,OAAO,CAACG,KAAK,CAACC,CAAC;KAC9B,CAAC;EACN;EAEAC,eAAe;IACb,IAAI,CAACH,SAAS,GAAG,KAAK;IACtB,IAAI,CAACT,IAAI,GAAG;MACVJ,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE;KACd;EACH;;AAnCWJ,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT9BzB,2BAAK;MAEDA,mEAyBM;MAENA,kEAGM;MACRA,iBAAM;;;MA/BEA,eAAgB;MAAhBA,qCAAgB;MA2BhBA,eAAe;MAAfA,oCAAe","names":["i0","EditItemComponent","constructor","itemService","name","description","updateItem","data","item","itemId","id","update","subscribe","next","res","console","log","submitted","error","e","editAnotherItem","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\paul_\\Documents\\angular\\app\\src\\app\\components\\edit-item\\edit-item.component.html","C:\\Users\\paul_\\Documents\\angular\\app\\src\\app\\components\\edit-item\\edit-item.component.ts"],"sourcesContent":["<div>\n  <div class=\"submit-form\">\n    <div *ngIf=\"!submitted\">\n      <div class=\"form-group\">\n        <label for=\"name\">Nombre</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"name\"\n          required\n          [(ngModel)]=\"item.name\"\n          name=\"name\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"description\">Descripción</label>\n        <input\n          class=\"form-control\"\n          id=\"description\"\n          required\n          [(ngModel)]=\"item.description\"\n          name=\"description\"\n        />\n      </div>\n\n      <button (click)=\"updateItem()\" class=\"btn btn-primary\">Actualizar</button>\n    </div>\n\n    <div *ngIf=\"submitted\">\n      <h4>El item se actualizó satisfactoriamente!</h4>\n      <button class=\"btn btn-primary\" (click)=\"editAnotherItem()\">Editar otro registro</button>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Item } from 'src/app/models/item.model';\nimport { ItemService } from 'src/app/services/item.service';\n\n@Component({\n  selector: 'app-edit-item',\n  templateUrl: './edit-item.component.html',\n  styleUrls: ['./edit-item.component.css']\n})\nexport class EditItemComponent {\n\n  item: Item = {\n    name: '',\n    description: ''\n  };\n  submitted = false;\n\n  constructor(private itemService: ItemService) { }\n\n  updateItem(): void {\n    const data = {\n      name: this.item.name,\n      description: this.item.description\n    };\n\n    // Assuming you have an \"id\" property for the item you want to update\n    const itemId = this.item.id;\n\n    this.itemService.update(itemId, data)\n      .subscribe({\n        next: (res) => {\n          console.log(res);\n          this.submitted = true;\n        },\n        error: (e) => console.error(e)\n      });\n  }\n\n  editAnotherItem(): void {\n    this.submitted = false;\n    this.item = {\n      name: '',\n      description: ''\n    };\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}