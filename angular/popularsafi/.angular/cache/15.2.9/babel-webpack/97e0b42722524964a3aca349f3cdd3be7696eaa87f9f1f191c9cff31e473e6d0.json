{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/tutorial.service\";\nfunction AddItemComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 2)(2, \"label\", 3);\n    i0.ɵɵtext(3, \"Nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function AddItemComponent_div_2_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.tutorial.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 2)(6, \"label\", 5);\n    i0.ɵɵtext(7, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function AddItemComponent_div_2_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.tutorial.description = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function AddItemComponent_div_2_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.saveTutorial());\n    });\n    i0.ɵɵtext(10, \"Submit\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.tutorial.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.tutorial.description);\n  }\n}\nfunction AddItemComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h4\");\n    i0.ɵɵtext(2, \"Item was submitted successfully!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function AddItemComponent_div_3_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.newTutorial());\n    });\n    i0.ɵɵtext(4, \"Add\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class AddItemComponent {\n  constructor(tutorialService) {\n    this.tutorialService = tutorialService;\n    this.tutorial = {\n      name: '',\n      description: ''\n    };\n    this.submitted = false;\n  }\n  saveTutorial() {\n    const data = {\n      name: this.tutorial.name,\n      description: this.tutorial.description\n    };\n    this.tutorialService.create(data).subscribe({\n      next: res => {\n        console.log(res);\n        this.submitted = true;\n      },\n      error: e => console.error(e)\n    });\n  }\n  newTutorial() {\n    this.submitted = false;\n    this.tutorial = {\n      name: '',\n      description: ''\n    };\n  }\n}\nAddItemComponent.ɵfac = function AddItemComponent_Factory(t) {\n  return new (t || AddItemComponent)(i0.ɵɵdirectiveInject(i1.TutorialService));\n};\nAddItemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddItemComponent,\n  selectors: [[\"app-add-tutorial\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[1, \"submit-form\"], [4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"required\", \"\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"id\", \"description\", \"required\", \"\", \"name\", \"description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-success\", 3, \"click\"]],\n  template: function AddItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0);\n      i0.ɵɵtemplate(2, AddItemComponent_div_2_Template, 11, 2, \"div\", 1);\n      i0.ɵɵtemplate(3, AddItemComponent_div_3_Template, 5, 0, \"div\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.submitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted);\n    }\n  },\n  styles: [\".submit-form[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  margin: auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtdHV0b3JpYWwvYWRkLXR1dG9yaWFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsWUFBWTtBQUNkIiwic291cmNlc0NvbnRlbnQiOlsiLnN1Ym1pdC1mb3JtIHtcbiAgbWF4LXdpZHRoOiA0MDBweDtcbiAgbWFyZ2luOiBhdXRvO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;IAEIA,2BAAwB;IAEFA,sBAAM;IAAAA,iBAAQ;IAChCA,gCAOE;IAFAA;MAAAA;MAAA;MAAA,OAAaA,6CACjB;IAAA,EAD+B;IAL7BA,iBAOE;IAGJA,8BAAwB;IACGA,2BAAW;IAAAA,iBAAQ;IAC5CA,gCAME;IAFAA;MAAAA;MAAA;MAAA,OAAaA,oDACjB;IAAA,EADsC;IAJpCA,iBAME;IAGJA,iCAAyD;IAAjDA;MAAAA;MAAA;MAAA,OAASA,oCAAc;IAAA,EAAC;IAAyBA,uBAAM;IAAAA,iBAAS;;;;IAhBpEA,eAA2B;IAA3BA,8CAA2B;IAW3BA,eAAkC;IAAlCA,qDAAkC;;;;;;IAQxCA,2BAAuB;IACjBA,gDAAgC;IAAAA,iBAAK;IACzCA,iCAAwD;IAAxBA;MAAAA;MAAA;MAAA,OAASA,mCAAa;IAAA,EAAC;IAACA,mBAAG;IAAAA,iBAAS;;;ACtB1E,OAAM,MAAOC,gBAAgB;EAQ3BC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IANnC,aAAQ,GAAS;MACfC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE;KACd;IACD,cAAS,GAAG,KAAK;EAEuC;EAExDC,YAAY;IACV,MAAMC,IAAI,GAAG;MACXH,IAAI,EAAE,IAAI,CAACI,QAAQ,CAACJ,IAAI;MACxBC,WAAW,EAAE,IAAI,CAACG,QAAQ,CAACH;KAC5B;IAED,IAAI,CAACF,eAAe,CAACM,MAAM,CAACF,IAAI,CAAC,CAC9BG,SAAS,CAAC;MACTC,IAAI,EAAGC,GAAG,IAAI;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAI,CAACG,SAAS,GAAG,IAAI;MACvB,CAAC;MACDC,KAAK,EAAGC,CAAC,IAAKJ,OAAO,CAACG,KAAK,CAACC,CAAC;KAC9B,CAAC;EACN;EAEAC,WAAW;IACT,IAAI,CAACH,SAAS,GAAG,KAAK;IACtB,IAAI,CAACP,QAAQ,GAAG;MACdJ,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE;KACd;EACH;;AAhCWJ,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT7BvB,2BAAK;MAEDA,kEAyBM;MAENA,iEAGM;MACRA,iBAAM;;;MA/BEA,eAAgB;MAAhBA,qCAAgB;MA2BhBA,eAAe;MAAfA,oCAAe","names":["i0","AddItemComponent","constructor","tutorialService","name","description","saveTutorial","data","tutorial","create","subscribe","next","res","console","log","submitted","error","e","newTutorial","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\paul_\\Documents\\angular\\app\\src\\app\\components\\add-tutorial\\add-tutorial.component.html","C:\\Users\\paul_\\Documents\\angular\\app\\src\\app\\components\\add-tutorial\\add-tutorial.component.ts"],"sourcesContent":["<div>\n  <div class=\"submit-form\">\n    <div *ngIf=\"!submitted\">\n      <div class=\"form-group\">\n        <label for=\"name\">Nombre</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"name\"\n          required\n          [(ngModel)]=\"tutorial.name\"\n          name=\"name\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"description\">Description</label>\n        <input\n          class=\"form-control\"\n          id=\"description\"\n          required\n          [(ngModel)]=\"tutorial.description\"\n          name=\"description\"\n        />\n      </div>\n\n      <button (click)=\"saveTutorial()\" class=\"btn btn-success\">Submit</button>\n    </div>\n\n    <div *ngIf=\"submitted\">\n      <h4>Item was submitted successfully!</h4>\n      <button class=\"btn btn-success\" (click)=\"newTutorial()\">Add</button>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Item } from 'src/app/models/tutorial.model';\nimport { TutorialService } from 'src/app/services/tutorial.service';\n\n@Component({\n  selector: 'app-add-tutorial',\n  templateUrl: './add-tutorial.component.html',\n  styleUrls: ['./add-tutorial.component.css']\n})\nexport class AddItemComponent {\n\n  tutorial: Item = {\n    name: '',\n    description: ''\n  };\n  submitted = false;\n\n  constructor(private tutorialService: TutorialService) { }\n\n  saveTutorial(): void {\n    const data = {\n      name: this.tutorial.name,\n      description: this.tutorial.description\n    };\n\n    this.tutorialService.create(data)\n      .subscribe({\n        next: (res) => {\n          console.log(res);\n          this.submitted = true;\n        },\n        error: (e) => console.error(e)\n      });\n  }\n\n  newTutorial(): void {\n    this.submitted = false;\n    this.tutorial = {\n      name: '',\n      description: ''\n    };\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}