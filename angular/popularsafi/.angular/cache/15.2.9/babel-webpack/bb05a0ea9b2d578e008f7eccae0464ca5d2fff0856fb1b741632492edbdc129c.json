{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:8080/api/v1';\nexport class TutorialService {\n  getItemById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  getAllItems() {\n    return this.http.get(this.baseUrl);\n  }\n  addItem(item) {\n    return this.http.post(this.baseUrl, item);\n  }\n  updateItem(id, item) {\n    return this.http.put(`${this.baseUrl}/${id}`, item);\n  }\n  deleteItem(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(baseUrl);\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n  create(data) {\n    return this.http.post(baseUrl, data);\n  }\n  update(id, data) {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n  delete(id) {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n  deleteAll() {\n    return this.http.delete(baseUrl);\n  }\n  findByName(name) {\n    return this.http.get(`${baseUrl}?name=${name}`);\n  }\n}\nTutorialService.ɵfac = function TutorialService_Factory(t) {\n  return new (t || TutorialService)(i0.ɵɵinject(i1.HttpClient));\n};\nTutorialService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TutorialService,\n  factory: TutorialService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAKA,MAAMA,OAAO,GAAG,8BAA8B;AAK9C,OAAM,MAAOC,eAAe;EAC1BC,WAAW,CAACC,EAAU;IACpB,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAO,GAAG,IAAI,CAACL,OAAO,IAAIG,EAAE,EAAE,CAAC;EACrD;EAEAG,WAAW;IACT,OAAO,IAAI,CAACF,IAAI,CAACC,GAAG,CAAS,IAAI,CAACL,OAAO,CAAC;EAC5C;EAEAO,OAAO,CAACC,IAAU;IAChB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAO,IAAI,CAACT,OAAO,EAAEQ,IAAI,CAAC;EACjD;EAEAE,UAAU,CAACP,EAAU,EAAEK,IAAU;IAC/B,OAAO,IAAI,CAACJ,IAAI,CAACO,GAAG,CAAO,GAAG,IAAI,CAACX,OAAO,IAAIG,EAAE,EAAE,EAAEK,IAAI,CAAC;EAC3D;EAEAI,UAAU,CAACT,EAAU;IACnB,OAAO,IAAI,CAACC,IAAI,CAACS,MAAM,CAAO,GAAG,IAAI,CAACb,OAAO,IAAIG,EAAE,EAAE,CAAC;EACxD;EACAW,YAAoBV,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCW,MAAM;IACJ,OAAO,IAAI,CAACX,IAAI,CAACC,GAAG,CAAaL,OAAO,CAAC;EAC3C;EAEAK,GAAG,CAACF,EAAO;IACT,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAW,GAAGL,OAAO,IAAIG,EAAE,EAAE,CAAC;EACpD;EAEAa,MAAM,CAACC,IAAS;IACd,OAAO,IAAI,CAACb,IAAI,CAACK,IAAI,CAACT,OAAO,EAAEiB,IAAI,CAAC;EACtC;EAEAC,MAAM,CAACf,EAAO,EAAEc,IAAS;IACvB,OAAO,IAAI,CAACb,IAAI,CAACO,GAAG,CAAC,GAAGX,OAAO,IAAIG,EAAE,EAAE,EAAEc,IAAI,CAAC;EAChD;EAEAJ,MAAM,CAACV,EAAO;IACZ,OAAO,IAAI,CAACC,IAAI,CAACS,MAAM,CAAC,GAAGb,OAAO,IAAIG,EAAE,EAAE,CAAC;EAC7C;EAEAgB,SAAS;IACP,OAAO,IAAI,CAACf,IAAI,CAACS,MAAM,CAACb,OAAO,CAAC;EAClC;EAEAoB,UAAU,CAACC,IAAS;IAClB,OAAO,IAAI,CAACjB,IAAI,CAACC,GAAG,CAAa,GAAGL,OAAO,SAASqB,IAAI,EAAE,CAAC;EAC7D;;AAhDWpB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAqB,SAAfrB,eAAe;EAAAsB,YAFd;AAAM","names":["baseUrl","TutorialService","getItemById","id","http","get","getAllItems","addItem","item","post","updateItem","put","deleteItem","delete","constructor","getAll","create","data","update","deleteAll","findByName","name","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\paul_\\Documents\\angular\\app\\src\\app\\services\\tutorial.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Tutorial } from '../models/tutorial.model';\n\nconst baseUrl = 'http://localhost:8080/api/v1';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TutorialService {\n  getItemById(id: number): Observable<Item> {\n    return this.http.get<Item>(`${this.baseUrl}/${id}`);\n  }\n\n  getAllItems(): Observable<Item[]> {\n    return this.http.get<Item[]>(this.baseUrl);\n  }\n\n  addItem(item: Item): Observable<Item> {\n    return this.http.post<Item>(this.baseUrl, item);\n  }\n\n  updateItem(id: number, item: Item): Observable<Item> {\n    return this.http.put<Item>(`${this.baseUrl}/${id}`, item);\n  }\n\n  deleteItem(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\n  }\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<Tutorial[]> {\n    return this.http.get<Tutorial[]>(baseUrl);\n  }\n\n  get(id: any): Observable<Tutorial> {\n    return this.http.get<Tutorial>(`${baseUrl}/${id}`);\n  }\n\n  create(data: any): Observable<any> {\n    return this.http.post(baseUrl, data);\n  }\n\n  update(id: any, data: any): Observable<any> {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n\n  delete(id: any): Observable<any> {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  deleteAll(): Observable<any> {\n    return this.http.delete(baseUrl);\n  }\n\n  findByName(name: any): Observable<Tutorial[]> {\n    return this.http.get<Tutorial[]>(`${baseUrl}?name=${name}`);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}